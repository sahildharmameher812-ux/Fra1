const express = require('express');
const router = express.Router();

// Enhanced Smart Chat Assistant for FRA Atlas
// Provides comprehensive, respectful, and intelligent responses

/**
 * Comprehensive Knowledge Base for FRA Atlas Project
 */
const knowledgeBase = {
  project: {
    name: "FRA Atlas & WebGIS Decision Support System",
    ministry: "Ministry of Tribal Affairs, Government of India",
    purpose: "AI-Powered system for Forest Rights Act implementation and land rights management",
    description: "An integrated platform combining GIS mapping, document processing, analytics, and decision support for tribal land rights under the Forest Rights Act.",
    targetUsers: [
      "Government officials processing FRA claims",
      "Tribal communities applying for forest rights",
      "District and state level administrators",
      "Policy makers and data analysts",
      "Forest Rights Committees (FRC, SDLC, DLC)"
    ],
    benefits: [
      "Reduces claim processing time from months to weeks",
      "Increases transparency in decision making",
      "Ensures policy compliance",
      "Provides data-driven insights",
      "Empowers tribal communities with digital access"
    ]
  },
  
  dashboard: {
    description: "Comprehensive dashboard providing real-time insights and visualizations",
    features: [
      "Live claim statistics and metrics",
      "Interactive charts and graphs (Bar, Line, Pie, Donut)",
      "State-wise and district-wise analysis",
      "Approval rates and trends",
      "Processing time analytics",
      "User activity monitoring",
      "Alert system for pending actions",
      "Customizable widgets and layouts",
      "Export capabilities (PDF, Excel, CSV)",
      "Mobile-responsive design"
    ],
    visualizations: [
      "Total claims by status (Approved/Pending/Rejected)",
      "Monthly submission trends",
      "District-wise distribution maps",
      "Land area statistics",
      "Processing time heatmaps",
      "Committee performance metrics",
      "User engagement analytics"
    ],
    access: "Available at /dashboard route after login"
  },

  analytics: {
    description: "Advanced analytics engine for data-driven decision making",
    features: [
      "Real-time data processing and visualization",
      "Predictive analytics for claim outcomes",
      "Trend analysis and forecasting",
      "Comparative analysis across regions",
      "Performance benchmarking",
      "Custom report generation",
      "Time-series analysis",
      "Statistical insights and correlations",
      "Data export in multiple formats"
    ],
    metrics: [
      "Total claims processed",
      "Average processing time",
      "Approval/rejection rates",
      "Land area granted",
      "Number of beneficiaries",
      "Committee efficiency metrics",
      "Regional comparisons",
      "Year-over-year growth"
    ],
    charts: [
      "Bar charts for comparative data",
      "Line charts for trends over time",
      "Pie charts for distribution",
      "Scatter plots for correlations",
      "Heatmaps for geographic data",
      "Funnel charts for process stages"
    ],
    apiEndpoint: "/api/analytics"
  },

  ocr: {
    fullName: "Optical Character Recognition System",
    description: "Advanced document processing system with AI-powered text extraction",
    features: [
      "Multi-format support (PDF, JPG, PNG, TIFF)",
      "High-accuracy text extraction using Tesseract.js",
      "Named Entity Recognition (NER) for automatic data extraction",
      "Multi-language support (English, Hindi, regional languages)",
      "Handwriting recognition capabilities",
      "Automatic field detection and population",
      "Document classification and categorization",
      "Quality validation and verification",
      "Batch processing for multiple documents",
      "OCR confidence scoring"
    ],
    process: [
      "1. Upload document (drag-and-drop or browse)",
      "2. System preprocesses image (enhancement, deskewing)",
      "3. Tesseract.js performs OCR text extraction",
      "4. NLP engine extracts entities (names, dates, locations, plot numbers)",
      "5. Data is validated against predefined patterns",
      "6. Extracted information auto-populates form fields",
      "7. User reviews and confirms extracted data",
      "8. Document is stored with metadata for future reference"
    ],
    supportedDocuments: [
      "Aadhar Cards",
      "Land Revenue Documents",
      "Tribal Certificates",
      "FRA Application Forms",
      "Forest Settlement Records",
      "Village Maps",
      "Gram Sabha Resolutions",
      "Any scanned government document"
    ],
    accuracy: "95%+ accuracy for printed documents, 85%+ for handwritten text",
    apiEndpoint: "/api/documents/ocr"
  },

  documentUpload: {
    description: "Secure document upload and management system",
    howToUpload: [
      "1. Navigate to 'Document Upload' page from main menu",
      "2. Select document type from dropdown (Aadhar, Land Record, etc.)",
      "3. Either drag-and-drop files or click 'Browse' to select",
      "4. System validates file format and size (max 50MB)",
      "5. Preview uploaded document before submission",
      "6. Add metadata (description, tags, category)",
      "7. Click 'Upload' to process",
      "8. Wait for OCR processing (shows progress bar)",
      "9. Review extracted data and make corrections if needed",
      "10. Confirm and save to database"
    ],
    features: [
      "Drag-and-drop interface",
      "Multiple file upload",
      "Real-time progress tracking",
      "Automatic virus scanning",
      "File format validation",
      "Size limit enforcement (50MB)",
      "Preview before upload",
      "Metadata tagging",
      "Version control",
      "Secure encrypted storage",
      "Access control and permissions"
    ],
    supportedFormats: ["PDF", "JPEG", "PNG", "TIFF", "DOC", "DOCX"],
    maxSize: "50MB per file",
    location: "Documents stored in /uploads directory with encryption"
  },

  dssSystem: {
    fullName: "Decision Support System",
    description: "AI-powered intelligent system for automated claim assessment and recommendations",
    features: [
      "Automated risk assessment",
      "Intelligent claim validation",
      "Policy compliance checking",
      "Historical data analysis",
      "Pattern recognition for fraud detection",
      "Recommendation engine for claim approval",
      "Workflow optimization suggestions",
      "Anomaly detection",
      "Predictive modeling for outcomes",
      "Committee decision assistance"
    ],
    howItWorks: [
      "1. **Data Collection**: System gathers all claim-related data",
      "2. **Analysis**: AI analyzes documents, location, applicant history",
      "3. **Validation**: Checks against FRA eligibility criteria",
      "4. **Risk Assessment**: Identifies potential issues or red flags",
      "5. **Comparison**: Compares with similar approved/rejected claims",
      "6. **Scoring**: Assigns confidence score to claim",
      "7. **Recommendation**: Provides approval/rejection recommendation",
      "8. **Reasoning**: Explains rationale behind recommendation",
      "9. **Committee Review**: Officials review AI recommendations",
      "10. **Final Decision**: Human decision maker approves/rejects"
    ],
    criteria: [
      "Applicant eligibility (tribal status, occupation)",
      "Land ownership history",
      "Forest Rights Act compliance",
      "Geographic location validity",
      "Document authenticity",
      "Gram Sabha resolution",
      "No overlap with existing claims",
      "Environmental impact assessment",
      "Historical occupancy proof"
    ],
    benefits: [
      "Reduces human bias in decisions",
      "Speeds up processing by 60%",
      "Ensures consistent policy application",
      "Identifies fraudulent claims early",
      "Provides data-backed reasoning",
      "Improves overall approval accuracy"
    ],
    accuracy: "89% accuracy in predicting final decisions",
    apiEndpoint: "/api/decision-support"
  },

  gis: {
    description: "Geographic Information System for comprehensive spatial analysis",
    features: [
      "Interactive map visualization (Leaflet/Mapbox)",
      "Multi-layer management (districts, forests, claims, villages)",
      "Spatial query and analysis",
      "Buffer analysis around protected areas",
      "Coordinate transformation and projection",
      "Heatmap generation for claim density",
      "Cluster analysis",
      "Distance and area calculations",
      "Overlay analysis",
      "Route planning and optimization",
      "GPS integration for field data collection",
      "Export maps as images or PDFs"
    ],
    layers: [
      "Administrative boundaries (State/District/Tehsil)",
      "Forest reserve areas",
      "Protected areas and national parks",
      "Village boundaries",
      "Individual and community claims",
      "Rivers and water bodies",
      "Roads and infrastructure",
      "Satellite imagery overlay"
    ],
    operations: [
      "Point-in-polygon analysis",
      "Buffer zone creation",
      "Intersection analysis",
      "Union and merge operations",
      "Clip and extract",
      "Distance matrix calculation"
    ],
    apiEndpoint: "/api/gis"
  },

  features: {
    authentication: {
      description: "Secure multi-role authentication system",
      features: [
        "JWT-based authentication",
        "Role-based access control (RBAC)",
        "Password hashing with bcrypt",
        "Session management",
        "Two-factor authentication (optional)",
        "Password reset via email",
        "Account lockout after failed attempts",
        "Audit logging"
      ]
    },
    userRoles: {
      admin: "Full system access, user management, system configuration",
      officer: "Claim processing, document review, committee functions",
      analyst: "Analytics access, report generation, data export",
      fieldWorker: "Data collection, claim submission, document upload",
      publicUser: "View public data, track own applications"
    }
  },

  technologies: {
    backend: ["Node.js", "Express.js", "MongoDB", "Mongoose"],
    frontend: ["React 18", "Material-UI (MUI)", "React Router", "Axios"],
    gis: ["Leaflet.js", "Mapbox GL", "Turf.js", "GeoJSON"],
    aiMl: ["Tesseract.js (OCR)", "Compromise.js (NLP)", "Custom NER", "TensorFlow.js"],
    dataViz: ["Chart.js", "Recharts", "D3.js"],
    security: ["JWT", "bcrypt", "Helmet.js", "CORS"],
    deployment: ["Vercel (Frontend)", "Render (Backend)", "MongoDB Atlas (Database)"]
  },

  fra: {
    fullForm: "Forest Rights Act, 2006 (Scheduled Tribes and Other Traditional Forest Dwellers)",
    purpose: "Recognition of forest rights of Scheduled Tribes and Other Traditional Forest Dwellers who have been residing in forests for generations",
    rights: [
      {
        type: "Individual Forest Rights (IFR)",
        description: "Rights to cultivate and live in forest land",
        maxArea: "4 hectares"
      },
      {
        type: "Community Forest Rights (CFR)",
        description: "Rights to protect, regenerate, conserve, and manage community forest resources",
        scope: "Entire village forest area"
      },
      {
        type: "Community Forest Resource Rights (CFRR)",
        description: "Rights to use and manage minor forest produce",
        includes: "Bamboo, tendu leaves, mahua, herbs"
      }
    ],
    claimProcess: [
      "Step 1: Application submission by claimant with supporting documents",
      "Step 2: Forest Rights Committee (FRC) verifies claim at village level",
      "Step 3: Sub-Divisional Level Committee (SDLC) reviews and recommends",
      "Step 4: District Level Committee (DLC) gives final approval",
      "Step 5: Title certificate issued to claimant"
    ],
    eligibility: [
      "Must be Scheduled Tribe or Other Traditional Forest Dweller",
      "Residing in forest area as of December 13, 2005",
      "Dependent on forest for livelihood",
      "Evidence of forest dwelling for 3 generations (75 years)"
    ]
  }
};

/**
 * Polite and respectful greeting messages
 */
const politeGreetings = [
  "Thank you so much for your question! I'll be delighted to explain that in detail.",
  "I truly appreciate your interest! Let me provide you with comprehensive information.",
  "That's an excellent question! I'm honored to help you understand everything about this.",
  "Thank you for reaching out to me! I'd be more than happy to assist you with detailed information.",
  "I'm very glad you asked! Please allow me to share complete information with you.",
  "What a wonderful question! I'll provide you with all the details you need.",
  "Thank you for your valuable query! I'm here to give you thorough information.",
  "I'm pleased to help! Let me explain everything you need to know about this.",
  "Your question is much appreciated! I'll gladly provide detailed answers.",
  "It's my pleasure to assist you! Let me give you comprehensive information about this."
];

function getPoliteGreeting() {
  return politeGreetings[Math.floor(Math.random() * politeGreetings.length)];
}

/**
 * Enhanced intelligent response generator with respectful, comprehensive answers
 */
function generateSmartResponse(query) {
  const lowerQuery = query.toLowerCase();
  const greeting = getPoliteGreeting();

  // Dashboard questions
  if (lowerQuery.includes('dashboard')) {
    return {
      answer: `${greeting}\\n\\n📊 **About the FRA Atlas Dashboard**\\n\\n` +
              `${knowledgeBase.dashboard.description}\\n\\n` +
              `**Main Features:**\\n` +
              knowledgeBase.dashboard.features.map((f, i) => `${i + 1}. ${f}`).join('\\n') + '\\n\\n' +
              `**Available Visualizations:**\\n` +
              knowledgeBase.dashboard.visualizations.map(v => `• ${v}`).join('\\n') + '\\n\\n' +
              `**How to Access:**\\n` +
              `${knowledgeBase.dashboard.access}\\n\\n` +
              `The dashboard provides a complete overview of the entire FRA system at a glance, making it easy for administrators and officials to monitor progress and make informed decisions.\\n\\n` +
              `Is there anything specific about the dashboard you'd like to know more about? I'm here to help! 😊`,
      confidence: 0.98,
      category: "dashboard"
    };
  }

  // Analytics page questions
  if (lowerQuery.includes('analytic') || lowerQuery.includes('chart') || 
      lowerQuery.includes('graph') || lowerQuery.includes('report') || 
      lowerQuery.includes('statistics')) {
    return {
      answer: `${greeting}\\n\\n📈 **Analytics System - Comprehensive Data Insights**\\n\\n` +
              `${knowledgeBase.analytics.description}\\n\\n` +
              `**Key Features:**\\n` +
              knowledgeBase.analytics.features.map((f, i) => `${i + 1}. ${f}`).join('\\n') + '\\n\\n' +
              `**Available Metrics:**\\n` +
              knowledgeBase.analytics.metrics.map(m => `✓ ${m}`).join('\\n') + '\\n\\n' +
              `**Chart Types Available:**\\n` +
              knowledgeBase.analytics.charts.map(c => `• ${c}`).join('\\n') + '\\n\\n' +
              `**API Endpoint:** \\`${knowledgeBase.analytics.apiEndpoint}\\`\\n\\n` +
              `The analytics page is designed to help officials, policy makers, and analysts understand trends, identify bottlenecks, and make data-driven decisions to improve FRA implementation.\\n\\n` +
              `Would you like to know about any specific analytics feature? Feel free to ask! 😊`,
      confidence: 0.97,
      category: "analytics"
    };
  }

  // OCR questions
  if (lowerQuery.includes('ocr') || lowerQuery.includes('text extraction') || 
      lowerQuery.includes('scan') || lowerQuery.includes('optical character')) {
    return {
      answer: `${greeting}\\n\\n🔍 **OCR System - Advanced Document Processing**\\n\\n` +
              `**Full Name:** ${knowledgeBase.ocr.fullName}\\n\\n` +
              `${knowledgeBase.ocr.description}\\n\\n` +
              `**Features & Capabilities:**\\n` +
              knowledgeBase.ocr.features.map((f, i) => `${i + 1}. ${f}`).join('\\n') + '\\n\\n' +
              `**How OCR Processing Works:**\\n` +
              knowledgeBase.ocr.process.join('\\n') + '\\n\\n' +
              `**Supported Document Types:**\\n` +
              knowledgeBase.ocr.supportedDocuments.map(d => `• ${d}`).join('\\n') + '\\n\\n' +
              `**Accuracy Rate:** ${knowledgeBase.ocr.accuracy}\\n\\n` +
              `**API Endpoint:** \\`${knowledgeBase.ocr.apiEndpoint}\\`\\n\\n` +
              `The OCR system significantly reduces manual data entry work and speeds up claim processing. It's one of the most powerful features of the FRA Atlas system!\\n\\n` +
              `Do you have any specific questions about OCR functionality? I'm happy to explain more! 😊`,
      confidence: 0.99,
      category: "ocr"
    };
  }

  // Document upload questions
  if (lowerQuery.includes('upload') || lowerQuery.includes('how to upload') || 
      lowerQuery.includes('document upload') || lowerQuery.includes('submit document')) {
    return {
      answer: `${greeting}\\n\\n📤 **Document Upload System - Step-by-Step Guide**\\n\\n` +
              `${knowledgeBase.documentUpload.description}\\n\\n` +
              `**How to Upload Documents:**\\n` +
              knowledgeBase.documentUpload.howToUpload.join('\\n') + '\\n\\n' +
              `**System Features:**\\n` +
              knowledgeBase.documentUpload.features.map(f => `• ${f}`).join('\\n') + '\\n\\n' +
              `**Supported File Formats:** ${knowledgeBase.documentUpload.supportedFormats.join(', ')}\\n` +
              `**Maximum File Size:** ${knowledgeBase.documentUpload.maxSize}\\n` +
              `**Storage Location:** ${knowledgeBase.documentUpload.location}\\n\\n` +
              `**Pro Tips:**\\n` +
              `• Ensure documents are clear and legible\\n` +
              `• High-resolution scans work best for OCR\\n` +
              `• PDF format is recommended for multi-page documents\\n` +
              `• Use meaningful filenames for easy identification\\n\\n` +
              `The upload system is designed to be user-friendly and secure. All documents are encrypted and protected with role-based access control.\\n\\n` +
              `Need more help with document upload? Just ask! 😊`,
      confidence: 0.98,
      category: "document_upload"
    };
  }

  // DSS (Decision Support System) questions  
  if (lowerQuery.includes('dss') || lowerQuery.includes('decision support') || 
      lowerQuery.includes('ai recommendation') || lowerQuery.includes('how dss works')) {
    return {
      answer: `${greeting}\\n\\n🤖 **Decision Support System (DSS) - AI-Powered Intelligence**\\n\\n` +
              `**Full Name:** ${knowledgeBase.dssSystem.fullName}\\n\\n` +
              `${knowledgeBase.dssSystem.description}\\n\\n` +
              `**Core Features:**\\n` +
              knowledgeBase.dssSystem.features.map((f, i) => `${i + 1}. ${f}`).join('\\n') + '\\n\\n' +
              `**How the DSS System Works:**\\n` +
              knowledgeBase.dssSystem.howItWorks.join('\\n') + '\\n\\n' +
              `**Evaluation Criteria:**\\n` +
              knowledgeBase.dssSystem.criteria.map(c => `• ${c}`).join('\\n') + '\\n\\n' +
              `**Key Benefits:**\\n` +
              knowledgeBase.dssSystem.benefits.map(b => `✓ ${b}`).join('\\n') + '\\n\\n' +
              `**System Accuracy:** ${knowledgeBase.dssSystem.accuracy}\\n` +
              `**API Endpoint:** \\`${knowledgeBase.dssSystem.apiEndpoint}\\`\\n\\n` +
              `**Important Note:** The DSS provides recommendations, but final decisions are always made by authorized human officials. The AI assists, but humans decide!\\n\\n` +
              `This system represents the cutting edge of AI in governance, making claim processing faster, fairer, and more transparent.\\n\\n` +
              `Would you like to know more about any specific DSS feature? I'm here to help! 😊`,
      confidence: 0.99,
      category: "dss_system"
    };
  }

  // GIS/Map questions
  if (lowerQuery.includes('gis') || lowerQuery.includes('map') || 
      lowerQuery.includes('spatial') || lowerQuery.includes('location') ||
      lowerQuery.includes('geographic')) {
    return {
      answer: `${greeting}\\n\\n🗺️ **GIS System - Geographic Information & Spatial Analysis**\\n\\n` +
              `${knowledgeBase.gis.description}\\n\\n` +
              `**Comprehensive Features:**\\n` +
              knowledgeBase.gis.features.map((f, i) => `${i + 1}. ${f}`).join('\\n') + '\\n\\n' +
              `**Available Map Layers:**\\n` +
              knowledgeBase.gis.layers.map(l => `• ${l}`).join('\\n') + '\\n\\n' +
              `**Spatial Operations:**\\n` +
              knowledgeBase.gis.operations.map(o => `• ${o}`).join('\\n') + '\\n\\n' +
              `**API Endpoint:** \\`${knowledgeBase.gis.apiEndpoint}\\`\\n\\n` +
              `**Use Cases:**\\n` +
              `• Visualize all claims on an interactive map\\n` +
              `• Check if claimed land overlaps with protected areas\\n` +
              `• Calculate distances and land areas\\n` +
              `• Generate buffer zones around forest reserves\\n` +
              `• Analyze claim density by region\\n` +
              `• Export maps for reports and presentations\\n\\n` +
              `The GIS system is powered by industry-leading libraries (Leaflet, Mapbox, Turf.js) and provides professional-grade spatial analysis capabilities.\\n\\n` +
              `Interested in learning more about GIS features? Feel free to ask! 😊`,
      confidence: 0.97,
      category: "gis"
    };
  }

  // Project overview questions
  if (lowerQuery.includes('what is') || lowerQuery.includes('about project') || 
      lowerQuery.includes('what does') || lowerQuery.includes('explain project') ||
      lowerQuery.includes('overview')) {
    return {
      answer: `${greeting}\\n\\n🌿 **${knowledgeBase.project.name}**\\n\\n` +
              `This is an advanced AI-powered platform developed for the **${knowledgeBase.project.ministry}**.\\n\\n` +
              `**Purpose:** ${knowledgeBase.project.purpose}\\n\\n` +
              `${knowledgeBase.project.description}\\n\\n` +
              `**Key System Components:**\\n` +
              `📊 **Dashboard** - Real-time metrics and visualizations\\n` +
              `📈 **Analytics** - Advanced data analysis and reporting\\n` +
              `🗺️ **GIS Mapping** - Interactive spatial analysis\\n` +
              `📄 **OCR System** - Automated document processing\\n` +
              `📤 **Document Upload** - Secure file management\\n` +
              `🤖 **AI Decision Support** - Intelligent recommendations\\n` +
              `🛰️ **Satellite Integration** - Remote sensing capabilities\\n` +
              `🔐 **Security System** - Role-based access control\\n\\n` +
              `**Target Users:**\\n` +
              knowledgeBase.project.targetUsers.map(u => `• ${u}`).join('\\n') + '\\n\\n' +
              `**Key Benefits:**\\n` +
              knowledgeBase.project.benefits.map(b => `✓ ${b}`).join('\\n') + '\\n\\n` +
              `This system represents a major digital transformation in FRA implementation, bringing transparency, efficiency, and empowerment to forest rights administration.\\n\\n` +
              `Would you like to explore any specific component? I'm here to provide detailed information! 😊`,
      confidence: 0.98,
      category: "project_overview"
    };
  }

  // FRA (Forest Rights Act) questions
  if (lowerQuery.includes('fra') || lowerQuery.includes('forest rights act') || 
      lowerQuery.includes('forest rights') || lowerQuery.includes('what is fra')) {
    return {
      answer: `${greeting}\\n\\n📜 **Forest Rights Act (FRA), 2006**\\n\\n` +
              `**Full Title:** ${knowledgeBase.fra.fullForm}\\n\\n` +
              `**Purpose:** ${knowledgeBase.fra.purpose}\\n\\n` +
              `**Types of Rights Granted:**\\n` +
              knowledgeBase.fra.rights.map((r, i) => 
                `${i + 1}. **${r.type}**\\n   ${r.description}\\n   ${r.maxArea || r.scope || r.includes ? `(${r.maxArea || r.scope || 'Includes: ' + r.includes})` : ''}`
              ).join('\\n\\n') + '\\n\\n' +
              `**Claim Processing Steps:**\\n` +
              knowledgeBase.fra.claimProcess.join('\\n') + '\\n\\n' +
              `**Eligibility Criteria:**\\n` +
              knowledgeBase.fra.eligibility.map(e => `• ${e}`).join('\\n') + '\\n\\n' +
              `**How This System Helps:**\\n` +
              `• Digitizes the entire claim process\\n` +
              `• Reduces processing time significantly\\n` +
              `• Ensures transparency at every step\\n` +
              `• Provides real-time tracking for applicants\\n` +
              `• Maintains comprehensive audit trails\\n` +
              `• Generates reports for policy makers\\n\\n` +
              `The FRA 2006 is a landmark legislation for tribal rights in India, and this system aims to make its implementation more effective and accessible.\\n\\n` +
              `Do you have more questions about FRA or how the system implements it? I'm happy to help! 😊`,
      confidence: 0.99,
      category: "fra_information"
    };
  }

  // Technology stack questions
  if (lowerQuery.includes('technology') || lowerQuery.includes('tech stack') || 
      lowerQuery.includes('built with') || lowerQuery.includes('framework')) {
    return {
      answer: `${greeting}\\n\\n💻 **FRA Atlas Technology Stack**\\n\\n` +
              `**Backend Technologies:**\\n` +
              knowledgeBase.technologies.backend.map(t => `• ${t}`).join('\\n') + '\\n\\n' +
              `**Frontend Technologies:**\\n` +
              knowledgeBase.technologies.frontend.map(t => `• ${t}`).join('\\n') + '\\n\\n' +
              `**GIS Technologies:**\\n` +
              knowledgeBase.technologies.gis.map(t => `• ${t}`).join('\\n') + '\\n\\n' +
              `**AI/ML Technologies:**\\n` +
              knowledgeBase.technologies.aiMl.map(t => `• ${t}`).join('\\n') + '\\n\\n' +
              `**Data Visualization:**\\n` +
              knowledgeBase.technologies.dataViz.map(t => `• ${t}`).join('\\n') + '\\n\\n' +
              `**Security:**\\n` +
              knowledgeBase.technologies.security.map(t => `• ${t}`).join('\\n') + '\\n\\n' +
              `**Deployment:**\\n` +
              knowledgeBase.technologies.deployment.map(t => `• ${t}`).join('\\n') + '\\n\\n' +
              `**Why These Technologies?**\\n` +
              `• **Scalability**: Can handle millions of claims\\n` +
              `• **Security**: Enterprise-grade protection\\n` +
              `• **Performance**: Fast and responsive\\n` +
              `• **Modern**: Latest web standards\\n` +
              `• **Open Source**: Cost-effective and community-supported\\n` +
              `• **Integration**: Easy to connect with government systems\\n\\n` +
              `The technology stack is carefully chosen to meet government standards while providing cutting-edge capabilities.\\n\\n` +
              `Interested in learning more about any specific technology? Just ask! 😊`,
      confidence: 0.96,
      category: "technology"
    };
  }

  // Authentication/Security questions
  if (lowerQuery.includes('login') || lowerQuery.includes('authentication') || 
      lowerQuery.includes('security') || lowerQuery.includes('auth') || 
      lowerQuery.includes('user role') || lowerQuery.includes('permission')) {
    return {
      answer: `${greeting}\\n\\n🔐 **Security & Authentication System**\\n\\n` +
              `${knowledgeBase.features.authentication.description}\\n\\n` +
              `**Security Features:**\\n` +
              knowledgeBase.features.authentication.features.map((f, i) => `${i + 1}. ${f}`).join('\\n') + '\\n\\n' +
              `**User Roles & Permissions:**\\n\\n` +
              `**Admin Role:**\\n${knowledgeBase.features.userRoles.admin}\\n\\n` +
              `**Officer Role:**\\n${knowledgeBase.features.userRoles.officer}\\n\\n` +
              `**Analyst Role:**\\n${knowledgeBase.features.userRoles.analyst}\\n\\n` +
              `**Field Worker Role:**\\n${knowledgeBase.features.userRoles.fieldWorker}\\n\\n` +
              `**Public User Role:**\\n${knowledgeBase.features.userRoles.publicUser}\\n\\n` +
              `**Security Measures:**\\n` +
              `• All passwords are encrypted using bcrypt\\n` +
              `• JWT tokens expire after set time periods\\n` +
              `• Failed login attempts trigger account lockout\\n` +
              `• All sensitive operations are logged\\n` +
              `• HTTPS encryption in production\\n` +
              `• Regular security audits\\n` +
              `• Compliance with government security standards\\n\\n` +
              `Security is our top priority! The system is designed to protect sensitive tribal land data and personal information.\\n\\n` +
              `Have questions about security or user roles? I'm here to explain! 😊`,
      confidence: 0.97,
      category: "security"
    };
  }

  // Help/General questions
  if (lowerQuery.includes('help') || lowerQuery.includes('how to') || 
      lowerQuery === 'hi' || lowerQuery === 'hello' || lowerQuery === 'hey' ||
      lowerQuery.includes('assist') || lowerQuery.includes('guide')) {
    return {
      answer: `${greeting}\\n\\n👋 **Welcome to FRA Atlas Intelligent Chat Assistant!**\\n\\n` +
              `I'm your personal guide to understanding the Forest Rights Act Atlas & WebGIS Decision Support System. I'm here to answer any questions you have about this comprehensive platform!\\n\\n` +
              `**What I Can Help You With:**\\n\\n` +
              `📊 **Dashboard** - Real-time metrics and visualizations\\n` +
              `📈 **Analytics Page** - Data analysis and reporting\\n` +
              `🔍 **OCR System** - Document processing and text extraction\\n` +
              `📤 **Document Upload** - How to upload and manage documents\\n` +
              `🤖 **DSS System** - AI-powered decision support\\n` +
              `🗺️ **GIS/Maps** - Geographic analysis and visualization\\n` +
              `🌿 **Project Overview** - What FRA Atlas is all about\\n` +
              `📜 **Forest Rights Act** - Understanding FRA 2006\\n` +
              `💻 **Technology Stack** - What we're built with\\n` +
              `🔐 **Security & Login** - Authentication and user roles\\n` +
              `📋 **Claims Process** - How claims are managed\\n` +
              `⚙️ **Setup & Installation** - Technical setup guide\\n\\n` +
              `**Example Questions You Can Ask:**\\n` +
              `• "How does the dashboard work?"\\n` +
              `• "Explain the OCR system"\\n` +
              `• "How do I upload documents?"\\n` +
              `• "What is the DSS system?"\\n` +
              `• "Tell me about analytics features"\\n` +
              `• "How does the GIS system work?"\\n` +
              `• "What is the Forest Rights Act?"\\n` +
              `• "Explain the claims process"\\n\\n` +
              `**Response Time:** I take about 1 second to process your question and provide detailed, respectful answers.\\n\\n` +
              `I'm designed to be helpful, informative, and respectful. Feel free to ask me anything about the FRA Atlas system!\\n\\n` +
              `What would you like to know? 😊`,
      confidence: 1.0,
      category: "help"
    };
  }

  // Claims process questions
  if (lowerQuery.includes('claim') || lowerQuery.includes('application') || 
      lowerQuery.includes('process claim') || lowerQuery.includes('submit claim')) {
    return {
      answer: `${greeting}\\n\\n📋 **FRA Claims Management & Processing**\\n\\n` +
              `**Complete Claims Lifecycle:**\\n` +
              knowledgeBase.fra.claimProcess.join('\\n') + '\\n\\n' +
              `**System Features for Claims:**\\n` +
              `• Digital claim submission form\\n` +
              `• Document upload with OCR processing\\n` +
              `• Automatic validation of eligibility criteria\\n` +
              `• GIS-based land plot mapping\\n` +
              `• Real-time status tracking\\n` +
              `• Committee workflow management\\n` +
              `• Automated notifications to applicants\\n` +
              `• AI-powered decision support\\n` +
              `• Document verification tools\\n` +
              `• Audit trail for all actions\\n` +
              `• Reports and analytics\\n\\n` +
              `**How to Submit a Claim:**\\n` +
              `1. Register/Login to the system\\n` +
              `2. Navigate to "New Claim" section\\n` +
              `3. Fill in applicant details\\n` +
              `4. Upload required documents\\n` +
              `5. Mark land plot on GIS map\\n` +
              `6. Review and submit\\n` +
              `7. Track status online\\n\\n` +
              `**Benefits:**\\n` +
              `✓ Faster processing (weeks instead of months)\\n` +
              `✓ Complete transparency\\n` +
              `✓ Online status tracking\\n` +
              `✓ Reduced errors through automation\\n` +
              `✓ Digital document storage\\n` +
              `✓ Easy communication with officials\\n\\n` +
              `The claims management system ensures that every application is processed fairly, efficiently, and transparently.\\n\\n` +
              `Would you like to know more about any aspect of the claims process? I'm here to help! 😊`,
      confidence: 0.98,
      category: "claims"
    };
  }

  // API/Technical questions
  if (lowerQuery.includes('api') || lowerQuery.includes('endpoint') || 
      lowerQuery.includes('integration') || lowerQuery.includes('developer')) {
    return {
      answer: `${greeting}\\n\\n🔌 **API Documentation & Endpoints**\\n\\n` +
              `**Base URL:** \\`http://localhost:5000\\` (Development)\\n` +
              `**Production:** Your deployed backend URL\\n\\n` +
              `**Available API Endpoints:**\\n\\n` +
              `**Authentication:**\\n` +
              `• \\`POST /api/auth/register\\` - User registration\\n` +
              `• \\`POST /api/auth/login\\` - User login\\n` +
              `• \\`POST /api/auth/logout\\` - User logout\\n\\n` +
              `**Documents:**\\n` +
              `• \\`POST /api/documents/upload\\` - Upload documents\\n` +
              `• \\`POST /api/documents/ocr\\` - OCR processing\\n` +
              `• \\`GET /api/documents\\` - List all documents\\n\\n` +
              `**Analytics:**\\n` +
              `• \\`GET /api/analytics\\` - General analytics data\\n` +
              `• \\`GET /api/analytics-graphs\\` - Chart data\\n` +
              `• \\`GET /api/analytics/claims\\` - Claim statistics\\n\\n` +
              `**GIS:**\\n` +
              `• \\`GET /api/gis/layers\\` - Map layers\\n` +
              `• \\`POST /api/gis/spatial-query\\` - Spatial analysis\\n` +
              `• \\`GET /api/gis/claims-map\\` - Claim locations\\n\\n` +
              `**Decision Support:**\\n` +
              `• \\`POST /api/decision-support/analyze\\` - Analyze claim\\n` +
              `• \\`GET /api/decision-support/recommendations\\` - Get recommendations\\n\\n` +
              `**Claims:**\\n` +
              `• \\`POST /api/claims\\` - Submit new claim\\n` +
              `• \\`GET /api/claims\\` - List claims\\n` +
              `• \\`PUT /api/claims/:id\\` - Update claim\\n` +
              `• \\`GET /api/claims/:id/status\\` - Track claim status\\n\\n` +
              `**Chat Assistant:**\\n` +
              `• \\`POST /api/chat\\` - Send message (this system!)\\n` +
              `• \\`GET /api/chat/topics\\` - Get help topics\\n` +
              `• \\`GET /api/chat/quick-questions\\` - Suggested questions\\n\\n` +
              `**Authentication:** Most endpoints require JWT token in Authorization header\\n` +
              `**Format:** All requests/responses use JSON\\n` +
              `**CORS:** Configured for cross-origin requests\\n\\n` +
              `Need more details on any specific API? Just ask! 😊`,
      confidence: 0.96,
      category: "api"
    };
  }

  // Installation/Setup questions
  if (lowerQuery.includes('install') || lowerQuery.includes('setup') || 
      lowerQuery.includes('deploy') || lowerQuery.includes('run') || 
      lowerQuery.includes('start project')) {
    return {
      answer: `${greeting}\\n\\n⚙️ **Installation & Setup Guide**\\n\\n` +
              `**Prerequisites:**\\n` +
              `• Node.js (v14 or higher)\\n` +
              `• MongoDB (local or Atlas)\\n` +
              `• Git\\n\\n` +
              `**Installation Steps:**\\n\\n` +
              `\\`\\`\\`bash\\n` +
              `# 1. Clone the repository\\n` +
              `git clone https://github.com/your-username/fra-atlas.git\\n` +
              `cd fra-atlas\\n\\n` +
              `# 2. Install all dependencies\\n` +
              `npm run install-all\\n\\n` +
              `# 3. Set up environment variables\\n` +
              `cp .env.example .env\\n` +
              `# Edit .env with your settings\\n\\n` +
              `# 4. Start MongoDB (if running locally)\\n` +
              `mongod\\n\\n` +
              `# 5. Run the application\\n` +
              `npm run dev\\n` +
              `\\`\\`\\`\\n\\n` +
              `**Available Scripts:**\\n` +
              `• \\`npm run dev\\` - Runs both backend and frontend\\n` +
              `• \\`npm run server\\` - Backend only (port 5000)\\n` +
              `• \\`npm run client\\` - Frontend only (port 3000)\\n` +
              `• \\`npm start\\` - Production mode\\n\\n` +
              `**Access Points:**\\n` +
              `• Frontend: http://localhost:3000\\n` +
              `• Backend API: http://localhost:5000\\n` +
              `• Dashboard: http://localhost:5000/dashboard\\n\\n` +
              `**Deployment:**\\n` +
              `• Frontend: Vercel (free)\\n` +
              `• Backend: Render (free tier)\\n` +
              `• Database: MongoDB Atlas (free tier)\\n\\n` +
              `Check \\`DEPLOYMENT_GUIDE.md\\` for detailed deployment instructions!\\n\\n` +
              `**Troubleshooting:**\\n` +
              `• Make sure ports 3000 and 5000 are available\\n` +
              `• Check MongoDB connection string in .env\\n` +
              `• Clear node_modules and reinstall if issues persist\\n\\n` +
              `Need help with setup? I'm here to guide you through it! 😊`,
      confidence: 0.97,
      category: "setup"
    };
  }

  // Default fallback with helpful suggestions
  return {
    answer: `${greeting}\\n\\n🤔 I appreciate your question about: "${query}"\\n\\n` +
            `While I don't have a specific answer for that exact query, I'd be more than happy to help you with comprehensive information about:\\n\\n` +
            `📊 **Dashboard** - Metrics, visualizations, and real-time insights\\n` +
            `📈 **Analytics** - Data analysis, reports, and charts\\n` +
            `🔍 **OCR System** - Document processing and text extraction\\n` +
            `📤 **Document Upload** - How to upload and manage files\\n` +
            `🤖 **DSS System** - AI decision support and recommendations\\n` +
            `🗺️ **GIS & Maps** - Spatial analysis and visualization\\n` +
            `📜 **Forest Rights Act** - FRA 2006 information\\n` +
            `💻 **Technology** - Tech stack and architecture\\n` +
            `🔐 **Security** - Authentication and user roles\\n` +
            `📋 **Claims Process** - How to submit and track claims\\n\\n` +
            `**Try asking:**\\n` +
            `• "How does the dashboard work?"\\n` +
            `• "Explain the OCR system"\\n` +
            `• "What is the DSS system?"\\n` +
            `• "How do I upload documents?"\\n` +
            `• "Tell me about the analytics page"\\n` +
            `• "What is the Forest Rights Act?"\\n\\n` +
            `Or simply type "help" to see all available topics!\\n\\n` +
            `I'm here to provide you with detailed, respectful answers to all your questions. Please feel free to ask! 😊`,
    confidence: 0.6,
    category: "fallback"
  };
}

/**
 * POST /api/chat
 * Main chat endpoint - accepts user questions and returns intelligent, respectful responses
 * Includes 1-second processing simulation for better UX
 */
router.post('/', async (req, res) => {
  try {
    const { message, userId, sessionId } = req.body;

    if (!message || typeof message !== 'string') {
      return res.status(400).json({
        error: 'Message is required',
        success: false
      });
    }

    // Simulate 1-second processing time (for the three-dot loading animation)
    await new Promise(resolve => setTimeout(resolve, 1000));

    // Generate intelligent response
    const response = generateSmartResponse(message.trim());

    // Log interaction (in production, save to database)
    console.log(`[Chat Assistant] Query: "${message}" | Category: ${response.category} | Confidence: ${response.confidence}`);

    res.json({
      success: true,
      query: message,
      response: response.answer,
      confidence: response.confidence,
      category: response.category,
      timestamp: new Date().toISOString(),
      sessionId: sessionId || 'default'
    });

  } catch (error) {
    console.error('Chat Assistant Error:', error);
    res.status(500).json({
      success: false,
      error: 'I apologize, but I encountered an error while processing your question. Please try again.',
      message: error.message
    });
  }
});

/**
 * GET /api/chat/topics
 * Returns available help topics
 */
router.get('/topics', (req, res) => {
  res.json({
    success: true,
    topics: [
      { id: 'project', name: 'Project Overview', icon: '🌿' },
      { id: 'dashboard', name: 'Dashboard', icon: '📊' },
      { id: 'analytics', name: 'Analytics', icon: '📈' },
      { id: 'ocr', name: 'OCR System', icon: '🔍' },
      { id: 'upload', name: 'Document Upload', icon: '📤' },
      { id: 'dss', name: 'Decision Support', icon: '🤖' },
      { id: 'gis', name: 'GIS & Maps', icon: '🗺️' },
      { id: 'fra', name: 'Forest Rights Act', icon: '📜' },
      { id: 'technology', name: 'Technology', icon: '💻' },
      { id: 'security', name: 'Security', icon: '🔐' },
      { id: 'claims', name: 'Claims Process', icon: '📋' },
      { id: 'api', name: 'API Documentation', icon: '🔌' }
    ]
  });
});

/**
 * GET /api/chat/quick-questions
 * Returns suggested quick questions
 */
router.get('/quick-questions', (req, res) => {
  res.json({
    success: true,
    questions: [
      "What is FRA Atlas?",
      "How does the dashboard work?",
      "Explain the OCR system",
      "How do I upload documents?",
      "What is the DSS system?",
      "How does the analytics page work?",
      "Tell me about the GIS features",
      "What is the Forest Rights Act?",
      "How do I submit a claim?",
      "What security features are available?",
      "How do I set up the project?",
      "What are the API endpoints?"
    ]
  });
});

/**
 * POST /api/chat/feedback
 * Collect feedback on chat responses
 */
router.post('/feedback', (req, res) => {
  try {
    const { sessionId, messageId, rating, comment } = req.body;

    // In production, save to database
    console.log(`[Chat Feedback] Session: ${sessionId}, Rating: ${rating}/5, Comment: ${comment}`);

    res.json({
      success: true,
      message: 'Thank you so much for your valuable feedback! It helps us improve. 😊'
    });
  } catch (error) {
    res.status(500).json({
      success: false,
      error: 'We apologize, but we couldn\'t submit your feedback. Please try again.'
    });
  }
});

/**
 * GET /api/chat/health
 * Health check endpoint
 */
router.get('/health', (req, res) => {
  res.json({
    success: true,
    status: 'Chat Assistant is running smoothly! 😊',
    version: '2.0',
    features: 'Enhanced with comprehensive knowledge and respectful responses',
    timestamp: new Date().toISOString()
  });
});

module.exports = router;
